
package UsuarioWS;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UsuarioWS", targetNamespace = "http://webservices/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UsuarioWS {


    /**
     * 
     * @param contrasena
     * @param nombre
     * @param email
     * @return
     *     returns int
     */
    @WebMethod(operationName = "AgregarUsuario")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "AgregarUsuario", targetNamespace = "http://webservices/", className = "UsuarioWS.AgregarUsuario")
    @ResponseWrapper(localName = "AgregarUsuarioResponse", targetNamespace = "http://webservices/", className = "UsuarioWS.AgregarUsuarioResponse")
    @Action(input = "http://webservices/UsuarioWS/AgregarUsuarioRequest", output = "http://webservices/UsuarioWS/AgregarUsuarioResponse")
    public int agregarUsuario(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "contrasena", targetNamespace = "")
        String contrasena);

    /**
     * 
     * @param contrasena
     * @param id
     * @param nombre
     * @param email
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EditarUsuario")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "EditarUsuario", targetNamespace = "http://webservices/", className = "UsuarioWS.EditarUsuario")
    @ResponseWrapper(localName = "EditarUsuarioResponse", targetNamespace = "http://webservices/", className = "UsuarioWS.EditarUsuarioResponse")
    @Action(input = "http://webservices/UsuarioWS/EditarUsuarioRequest", output = "http://webservices/UsuarioWS/EditarUsuarioResponse")
    public boolean editarUsuario(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "contrasena", targetNamespace = "")
        String contrasena);

    /**
     * 
     * @param id
     * @return
     *     returns UsuarioWS.Usuario
     */
    @WebMethod(operationName = "SeleccionarUsuario")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "SeleccionarUsuario", targetNamespace = "http://webservices/", className = "UsuarioWS.SeleccionarUsuario")
    @ResponseWrapper(localName = "SeleccionarUsuarioResponse", targetNamespace = "http://webservices/", className = "UsuarioWS.SeleccionarUsuarioResponse")
    @Action(input = "http://webservices/UsuarioWS/SeleccionarUsuarioRequest", output = "http://webservices/UsuarioWS/SeleccionarUsuarioResponse")
    public Usuario seleccionarUsuario(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param email
     * @param contra
     * @return
     *     returns UsuarioWS.Usuario
     */
    @WebMethod(operationName = "Login")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Login", targetNamespace = "http://webservices/", className = "UsuarioWS.Login")
    @ResponseWrapper(localName = "LoginResponse", targetNamespace = "http://webservices/", className = "UsuarioWS.LoginResponse")
    @Action(input = "http://webservices/UsuarioWS/LoginRequest", output = "http://webservices/UsuarioWS/LoginResponse")
    public Usuario login(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "contra", targetNamespace = "")
        String contra);

    /**
     * 
     * @param email
     * @return
     *     returns java.util.List<UsuarioWS.Usuario>
     */
    @WebMethod(operationName = "SeleccionUsuarioPorEmailCoincidencia")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "SeleccionUsuarioPorEmailCoincidencia", targetNamespace = "http://webservices/", className = "UsuarioWS.SeleccionUsuarioPorEmailCoincidencia")
    @ResponseWrapper(localName = "SeleccionUsuarioPorEmailCoincidenciaResponse", targetNamespace = "http://webservices/", className = "UsuarioWS.SeleccionUsuarioPorEmailCoincidenciaResponse")
    @Action(input = "http://webservices/UsuarioWS/SeleccionUsuarioPorEmailCoincidenciaRequest", output = "http://webservices/UsuarioWS/SeleccionUsuarioPorEmailCoincidenciaResponse")
    public List<Usuario> seleccionUsuarioPorEmailCoincidencia(
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @param email
     * @return
     *     returns int
     */
    @WebMethod(operationName = "SeleccionUsuarioPorEmail")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "SeleccionUsuarioPorEmail", targetNamespace = "http://webservices/", className = "UsuarioWS.SeleccionUsuarioPorEmail")
    @ResponseWrapper(localName = "SeleccionUsuarioPorEmailResponse", targetNamespace = "http://webservices/", className = "UsuarioWS.SeleccionUsuarioPorEmailResponse")
    @Action(input = "http://webservices/UsuarioWS/SeleccionUsuarioPorEmailRequest", output = "http://webservices/UsuarioWS/SeleccionUsuarioPorEmailResponse")
    public int seleccionUsuarioPorEmail(
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @param email
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "comprobarExistenciaEmail", targetNamespace = "http://webservices/", className = "UsuarioWS.ComprobarExistenciaEmail")
    @ResponseWrapper(localName = "comprobarExistenciaEmailResponse", targetNamespace = "http://webservices/", className = "UsuarioWS.ComprobarExistenciaEmailResponse")
    @Action(input = "http://webservices/UsuarioWS/comprobarExistenciaEmailRequest", output = "http://webservices/UsuarioWS/comprobarExistenciaEmailResponse")
    public boolean comprobarExistenciaEmail(
        @WebParam(name = "email", targetNamespace = "")
        String email);

}
