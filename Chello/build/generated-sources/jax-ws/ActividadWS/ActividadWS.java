
package ActividadWS;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ActividadWS", targetNamespace = "http://webservices/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ActividadWS {


    /**
     * 
     * @param descripcion
     * @param vencimiento
     * @param estado
     * @param titulo
     * @param idModulo
     * @return
     *     returns int
     */
    @WebMethod(operationName = "AgregarActividad")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "AgregarActividad", targetNamespace = "http://webservices/", className = "ActividadWS.AgregarActividad")
    @ResponseWrapper(localName = "AgregarActividadResponse", targetNamespace = "http://webservices/", className = "ActividadWS.AgregarActividadResponse")
    @Action(input = "http://webservices/ActividadWS/AgregarActividadRequest", output = "http://webservices/ActividadWS/AgregarActividadResponse")
    public int agregarActividad(
        @WebParam(name = "titulo", targetNamespace = "")
        String titulo,
        @WebParam(name = "descripcion", targetNamespace = "")
        String descripcion,
        @WebParam(name = "vencimiento", targetNamespace = "")
        String vencimiento,
        @WebParam(name = "estado", targetNamespace = "")
        String estado,
        @WebParam(name = "idModulo", targetNamespace = "")
        int idModulo);

    /**
     * 
     * @param descripcion
     * @param vencimiento
     * @param estado
     * @param titulo
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EditarActividad")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "EditarActividad", targetNamespace = "http://webservices/", className = "ActividadWS.EditarActividad")
    @ResponseWrapper(localName = "EditarActividadResponse", targetNamespace = "http://webservices/", className = "ActividadWS.EditarActividadResponse")
    @Action(input = "http://webservices/ActividadWS/EditarActividadRequest", output = "http://webservices/ActividadWS/EditarActividadResponse")
    public boolean editarActividad(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "titulo", targetNamespace = "")
        String titulo,
        @WebParam(name = "descripcion", targetNamespace = "")
        String descripcion,
        @WebParam(name = "vencimiento", targetNamespace = "")
        String vencimiento,
        @WebParam(name = "estado", targetNamespace = "")
        String estado);

    /**
     * 
     * @param id
     * @return
     *     returns ActividadWS.Actividad
     */
    @WebMethod(operationName = "SeleccionarActividad")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "SeleccionarActividad", targetNamespace = "http://webservices/", className = "ActividadWS.SeleccionarActividad")
    @ResponseWrapper(localName = "SeleccionarActividadResponse", targetNamespace = "http://webservices/", className = "ActividadWS.SeleccionarActividadResponse")
    @Action(input = "http://webservices/ActividadWS/SeleccionarActividadRequest", output = "http://webservices/ActividadWS/SeleccionarActividadResponse")
    public Actividad seleccionarActividad(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param idModulo
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EliminarActividades")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "EliminarActividades", targetNamespace = "http://webservices/", className = "ActividadWS.EliminarActividades")
    @ResponseWrapper(localName = "EliminarActividadesResponse", targetNamespace = "http://webservices/", className = "ActividadWS.EliminarActividadesResponse")
    @Action(input = "http://webservices/ActividadWS/EliminarActividadesRequest", output = "http://webservices/ActividadWS/EliminarActividadesResponse")
    public boolean eliminarActividades(
        @WebParam(name = "idModulo", targetNamespace = "")
        int idModulo);

    /**
     * 
     * @param idModulo
     * @return
     *     returns java.util.List<ActividadWS.Actividad>
     */
    @WebMethod(operationName = "ObtenerActividadesDeModulo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ObtenerActividadesDeModulo", targetNamespace = "http://webservices/", className = "ActividadWS.ObtenerActividadesDeModulo")
    @ResponseWrapper(localName = "ObtenerActividadesDeModuloResponse", targetNamespace = "http://webservices/", className = "ActividadWS.ObtenerActividadesDeModuloResponse")
    @Action(input = "http://webservices/ActividadWS/ObtenerActividadesDeModuloRequest", output = "http://webservices/ActividadWS/ObtenerActividadesDeModuloResponse")
    public List<Actividad> obtenerActividadesDeModulo(
        @WebParam(name = "idModulo", targetNamespace = "")
        int idModulo);

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EliminarActividad")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "EliminarActividad", targetNamespace = "http://webservices/", className = "ActividadWS.EliminarActividad")
    @ResponseWrapper(localName = "EliminarActividadResponse", targetNamespace = "http://webservices/", className = "ActividadWS.EliminarActividadResponse")
    @Action(input = "http://webservices/ActividadWS/EliminarActividadRequest", output = "http://webservices/ActividadWS/EliminarActividadResponse")
    public boolean eliminarActividad(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EliminarActividadVirtual")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "EliminarActividadVirtual", targetNamespace = "http://webservices/", className = "ActividadWS.EliminarActividadVirtual")
    @ResponseWrapper(localName = "EliminarActividadVirtualResponse", targetNamespace = "http://webservices/", className = "ActividadWS.EliminarActividadVirtualResponse")
    @Action(input = "http://webservices/ActividadWS/EliminarActividadVirtualRequest", output = "http://webservices/ActividadWS/EliminarActividadVirtualResponse")
    public boolean eliminarActividadVirtual(
        @WebParam(name = "id", targetNamespace = "")
        int id);

}
